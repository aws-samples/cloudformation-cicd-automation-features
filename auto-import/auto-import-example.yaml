AWSTemplateFormatVersion: '2010-09-09'
Description: This CloudFormation template is used to display the auto-import feature of CloudFormation.

Parameters:
  DynamoDBTableName:
    Type: String
    Description: Name of the DynamoDB table
    
  LambdaFunctionName:
    Type: String
    Description: Name of the DynamoDB table
    
Resources:
  DynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
    Properties:
      TableName: !Ref DynamoDBTableName
      PointInTimeRecoverySpecification: 
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Delete
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: index.lambda_handler
      Role: !GetAtt [ LambdaExecutionRole, Arn ]
      Runtime: python3.8
      Code:
        ZipFile: |
          import boto3
          import os
          def lambda_handler(event, context):
              try:
                  dynamodb = boto3.resource('dynamodb')
                  table = dynamodb.Table(os.environ['DYNAMODB_TABLE'])
                  table.put_item(Item=event)
                  return event

              except Exception as e:
                  print(e)
                  return None
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTableName
     
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'custom-lambda-execution-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonDynamoDBFullAccess"
      
Outputs: 

  DynamoDBTableARN: 
    Description: DynamoDB table's ARN
    Value: !GetAtt DynamoDBTable.Arn
    
  LambdaFunctionARN: 
    Description: Lambda function's ARN
    Value: !GetAtt LambdaFunction.Arn